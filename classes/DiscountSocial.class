<?php


include_once('validators/textLengthRange.validator');
include_once('validators/int.validator');
include_once('validators/bool.validator');
include_once('validators/enum.validator');
include_once('validators/date.validator');
include_once('validators/require.validator');
include_once('validators/file.validator');
include_once('module/spravka1c/array.validator');
include_once('module/spravka1c/classes/base/BaseDocument.class');

class DiscountSocial extends BaseDocument{
	private $type = "000000015";
	private $discountId;

	private $allowedStatuses = [
		"Является студентом",
		"Является аспирантом"
	];


	public function __construct($data){
		$this->discountId = $data['discount_id'];
		$this->files = $data['files'];

	}


	public function Validate(){
		parent::validateStatus($this->allowedStatuses, spravka1c::$asr1C);
		$discountList = $this->getDiscountList();
		$dataValidated = [
			['value' => $this->discountId, 'type' => 'select', 'selectList' => $discountList, 'label' => 'Вид скидки', 'validators' => array(new enumValidator(array_keys($discountList)))]

		];


		foreach($this->files as $key => $file){
			$dataValidated[] = ['label' => 'Файл документа', 'value' => $file, 'validators' => array(new fileValidator(true, 3000, array('jpg', 'jpeg', 'pdf', 'gif', 'bmp', 'png', 'tiff')))];
		}

		if($this->files == []){
			$dataValidated[] = ['label' => 'Файл документа', 'value' => $this->files, 'validators' => array(new fileValidator(true, 3000, array('jpg', 'jpeg', 'pdf', 'gif', 'bmp', 'png', 'tiff')))];
		}
 		
		return parent::Validate($dataValidated);
	}


	public function GetData1C($diplomaId)
	{
		$files = $this->parseFiles($diplomaId);
		return [
			'student_id' => $_SESSION['user']['zbook'], 
			'type' => $this->type, 
			'discount_id' => $this->discountId, 
			'files' => $files
			
		];
	}


	private function parseFiles($diplomaId)
	{
		$files1c = [];
		foreach($this->files as $key => $value){
			$file1c = parent::moveFile($key, $value, $this->files[$key]['tmp_name'], $diplomaId);
            $files1c[] = $file1c;                      
        }

        $sth = core::$db->prepare('SELECT * FROM `attachmentnew` WHERE `spravka`=' . intval($diplomaId));
        $sth->execute();
        $filesDb = $sth->fetchAll();
        $sth->closeCursor();
        foreach($filesDb as $fileDb){
        	$files1c[] = ['path' => $fileDb['path'], 'ext' => $fileDb['ext']];
        }
        return $files1c;
	}	
		
    
    /**
     * @return array
     */
    private static function getDiscountList()
    {
        $discounts = [];
        foreach($_SESSION['user']['all_discounts'] as $discount){
            $discounts[$discount['discount_id']] = $discount['discount_name'] . ' - ' . (string)$discount['discount_size'].'%';
        }
        return $discounts;
    }



    public function GetErrors()
    {
    	return parent::GetErrors();
    }

}
